com/garmin/android/apps/connectmobile/connectiq/IConnectIQService = Com.Garmin.Android.Apps.Connectmobile.Connectiq.IConnectIQService
  getConnectedDevices()Ljava/util/List; = ConnectedDevices
  getKnownDevices()Ljava/util/List; = KnownDevices
  getApplicationInfo(Ljava/lang/String;Ljava/lang/String;Lcom/garmin/android/connectiq/IQDevice;Ljava/lang/String;)V = GetApplicationInfo(string, string, Com.Garmin.Android.Connectiq.IQDevice, string)
  getStatus(Lcom/garmin/android/connectiq/IQDevice;)I = GetStatus(Com.Garmin.Android.Connectiq.IQDevice)
  openApplication(Ljava/lang/String;Ljava/lang/String;Lcom/garmin/android/connectiq/IQDevice;Lcom/garmin/android/connectiq/IQApp;)V = OpenApplication(string, string, Com.Garmin.Android.Connectiq.IQDevice, Com.Garmin.Android.Connectiq.IQApp)
  openStore(Ljava/lang/String;)Z = OpenStore(string)
  registerApp(Lcom/garmin/android/connectiq/IQApp;Ljava/lang/String;Ljava/lang/String;)V = RegisterApp(Com.Garmin.Android.Connectiq.IQApp, string, string)
  sendImage(Lcom/garmin/android/connectiq/IQMessage;Lcom/garmin/android/connectiq/IQDevice;Lcom/garmin/android/connectiq/IQApp;)V = SendImage(Com.Garmin.Android.Connectiq.IQMessage, Com.Garmin.Android.Connectiq.IQDevice, Com.Garmin.Android.Connectiq.IQApp)
  sendMessage(Lcom/garmin/android/connectiq/IQMessage;Lcom/garmin/android/connectiq/IQDevice;Lcom/garmin/android/connectiq/IQApp;)V = SendMessage(Com.Garmin.Android.Connectiq.IQMessage, Com.Garmin.Android.Connectiq.IQDevice, Com.Garmin.Android.Connectiq.IQApp)
com/garmin/android/connectiq/adb/AdbConnection = Com.Garmin.Android.Connectiq.Adb.AdbConnection
  DEFAULT_PORT = DefaultPort
  getInstance()Lcom/garmin/android/connectiq/adb/AdbConnection; = Instance
  isActive()Z = IsActive
  isConnected()Z = IsConnected
  getPort()I = Port
  setPort(I)V = Port
  disconnect()V = Disconnect()
  establishConnection(Lcom/garmin/android/connectiq/adb/AdbConnection$AdbConnectionListener;)V = EstablishConnection(Com.Garmin.Android.Connectiq.Adb.AdbConnection.IAdbConnectionListener)
  sendMessage([B)Z = SendMessage(byte[])
  setContext(Landroid/content/Context;)V = SetContext(Android.Content.Context)
com/garmin/android/connectiq/adb/AdbDataHandler = Com.Garmin.Android.Connectiq.Adb.AdbDataHandler
  <init>()V = .ctor()
  handleMessage(Landroid/content/Context;[B)V = HandleMessage(Android.Content.Context, byte[])
com/garmin/android/connectiq/BuildConfig = Com.Garmin.Android.Connectiq.BuildConfig
  <init>()V = .ctor()
  APPLICATION_ID = ApplicationId
  BUILD_TYPE = BuildType
  DEBUG = Debug
  FLAVOR = Flavor
  VERSION_CODE = VersionCode
  VERSION_NAME = VersionName
com/garmin/android/connectiq/ConnectIQ = Com.Garmin.Android.Connectiq.ConnectIQ
  <init>()V = .ctor()
  APPLICATION_INFO = ApplicationInfo
  DEVICE_STATUS = DeviceStatus
  EXTRA_APPLICATION_ID = ExtraApplicationId
  EXTRA_APPLICATION_VERSION = ExtraApplicationVersion
  EXTRA_OPEN_APPLICATION_DEVICE = ExtraOpenApplicationDevice
  EXTRA_OPEN_APPLICATION_ID = ExtraOpenApplicationId
  EXTRA_OPEN_APPLICATION_RESULT_CODE = ExtraOpenApplicationResultCode
  EXTRA_PAYLOAD = ExtraPayload
  EXTRA_REMOTE_APPLICATION = ExtraRemoteApplication
  EXTRA_REMOTE_DEVICE = ExtraRemoteDevice
  EXTRA_STATUS = ExtraStatus
  GCM_CONNECTIQ_SERVICE_ACTION = GcmConnectiqServiceAction
  GCM_CONNECTIQ_SERVICE_CLASS = GcmConnectiqServiceClass
  GCM_PACKAGE_NAME = GcmPackageName
  INCOMING_MESSAGE = IncomingMessage
  mContext = MContext
  MIN_GCM_VERSION = MinGcmVersion
  mInitialized = MInitialized
  mListener = MListener
  OPEN_APPLICATION = OpenApplication
  sConnectType = SConnectType
  SEND_MESSAGE_STATUS = SendMessageStatus
  sInstance = SInstance
  getAdbPort()I = AdbPort
  setAdbPort(I)V = AdbPort
  getConnectedDevices()Ljava/util/List; = ConnectedDevices
  getInstance()Lcom/garmin/android/connectiq/ConnectIQ; = Instance
  getKnownDevices()Ljava/util/List; = KnownDevices
  deviceStatusChanged(Lcom/garmin/android/connectiq/IQDevice;Lcom/garmin/android/connectiq/IQDevice$IQDeviceStatus;)V = DeviceStatusChanged(Com.Garmin.Android.Connectiq.IQDevice, Com.Garmin.Android.Connectiq.IQDevice.IQDeviceStatus)
  displayGCMDialog(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V = DisplayGCMDialog(string, string, string, string)
  getApplicationInfo(Ljava/lang/String;Lcom/garmin/android/connectiq/IQDevice;Lcom/garmin/android/connectiq/ConnectIQ$IQApplicationInfoListener;)V = GetApplicationInfo(string, Com.Garmin.Android.Connectiq.IQDevice, Com.Garmin.Android.Connectiq.ConnectIQ.IQApplicationInfoListener)
  getDeviceStatus(Lcom/garmin/android/connectiq/IQDevice;)Lcom/garmin/android/connectiq/IQDevice$IQDeviceStatus; = GetDeviceStatus(Com.Garmin.Android.Connectiq.IQDevice)
  getInstance(Landroid/content/Context;Lcom/garmin/android/connectiq/ConnectIQ$IQConnectType;)Lcom/garmin/android/connectiq/ConnectIQ; = GetInstance(Android.Content.Context, Com.Garmin.Android.Connectiq.ConnectIQ.IQConnectType)
  initialize(Landroid/content/Context;ZLcom/garmin/android/connectiq/ConnectIQ$ConnectIQListener;)V = Initialize(Android.Content.Context, bool, Com.Garmin.Android.Connectiq.ConnectIQ.IConnectIQListener)
  openApplication(Lcom/garmin/android/connectiq/IQDevice;Lcom/garmin/android/connectiq/IQApp;Lcom/garmin/android/connectiq/ConnectIQ$IQOpenApplicationListener;)V = OpenApplication(Com.Garmin.Android.Connectiq.IQDevice, Com.Garmin.Android.Connectiq.IQApp, Com.Garmin.Android.Connectiq.ConnectIQ.IQOpenApplicationListener)
  openStore(Ljava/lang/String;)Z = OpenStore(string)
  registerForAppEvents(Lcom/garmin/android/connectiq/IQDevice;Lcom/garmin/android/connectiq/IQApp;Lcom/garmin/android/connectiq/ConnectIQ$IQApplicationEventListener;)V = RegisterForAppEvents(Com.Garmin.Android.Connectiq.IQDevice, Com.Garmin.Android.Connectiq.IQApp, Com.Garmin.Android.Connectiq.ConnectIQ.IQApplicationEventListener)
  registerForDeviceEvents(Lcom/garmin/android/connectiq/IQDevice;Lcom/garmin/android/connectiq/ConnectIQ$IQDeviceEventListener;)V = RegisterForDeviceEvents(Com.Garmin.Android.Connectiq.IQDevice, Com.Garmin.Android.Connectiq.ConnectIQ.IQDeviceEventListener)
  registerForEvents(Lcom/garmin/android/connectiq/IQDevice;Lcom/garmin/android/connectiq/ConnectIQ$IQDeviceEventListener;Lcom/garmin/android/connectiq/IQApp;Lcom/garmin/android/connectiq/ConnectIQ$IQApplicationEventListener;)V = RegisterForEvents(Com.Garmin.Android.Connectiq.IQDevice, Com.Garmin.Android.Connectiq.ConnectIQ.IQDeviceEventListener, Com.Garmin.Android.Connectiq.IQApp, Com.Garmin.Android.Connectiq.ConnectIQ.IQApplicationEventListener)
  registerForRemoteAppEvents(Lcom/garmin/android/connectiq/IQDevice;Lcom/garmin/android/connectiq/IQApp;)V = RegisterForRemoteAppEvents(Com.Garmin.Android.Connectiq.IQDevice, Com.Garmin.Android.Connectiq.IQApp)
  sendImageProtocol(Lcom/garmin/android/connectiq/IQDevice;Lcom/garmin/android/connectiq/IQApp;[BLcom/garmin/android/connectiq/ConnectIQ$IQSendImageListener;)V = SendImageProtocol(Com.Garmin.Android.Connectiq.IQDevice, Com.Garmin.Android.Connectiq.IQApp, byte[], Com.Garmin.Android.Connectiq.ConnectIQ.IQSendImageListener)
  sendMessage(Lcom/garmin/android/connectiq/IQDevice;Lcom/garmin/android/connectiq/IQApp;Ljava/lang/Object;Lcom/garmin/android/connectiq/ConnectIQ$IQSendMessageListener;)V = SendMessage(Com.Garmin.Android.Connectiq.IQDevice, Com.Garmin.Android.Connectiq.IQApp, Java.Lang.Object, Com.Garmin.Android.Connectiq.ConnectIQ.IQSendMessageListener)
  sendMessageProtocol(Lcom/garmin/android/connectiq/IQDevice;Lcom/garmin/android/connectiq/IQApp;[BLcom/garmin/android/connectiq/ConnectIQ$IQSendMessageListener;)V = SendMessageProtocol(Com.Garmin.Android.Connectiq.IQDevice, Com.Garmin.Android.Connectiq.IQApp, byte[], Com.Garmin.Android.Connectiq.ConnectIQ.IQSendMessageListener)
  shutdown(Landroid/content/Context;)V = Shutdown(Android.Content.Context)
  unregisterAllForEvents()V = UnregisterAllForEvents()
  unregisterForApplicationEvents(Lcom/garmin/android/connectiq/IQDevice;Lcom/garmin/android/connectiq/IQApp;)V = UnregisterForApplicationEvents(Com.Garmin.Android.Connectiq.IQDevice, Com.Garmin.Android.Connectiq.IQApp)
  unregisterForDeviceEvents(Lcom/garmin/android/connectiq/IQDevice;)V = UnregisterForDeviceEvents(Com.Garmin.Android.Connectiq.IQDevice)
  unregisterForEvents(Lcom/garmin/android/connectiq/IQDevice;)V = UnregisterForEvents(Com.Garmin.Android.Connectiq.IQDevice)
  verifyInitialized()V = VerifyInitialized()
com/garmin/android/connectiq/ConnectIQAdbStrategy = Com.Garmin.Android.Connectiq.ConnectIQAdbStrategy
  getConnectedDevices()Ljava/util/List; = ConnectedDevices
  getKnownDevices()Ljava/util/List; = KnownDevices
  getDeviceStatus(Lcom/garmin/android/connectiq/IQDevice;)Lcom/garmin/android/connectiq/IQDevice$IQDeviceStatus; = GetDeviceStatus(Com.Garmin.Android.Connectiq.IQDevice)
  registerForRemoteAppEvents(Lcom/garmin/android/connectiq/IQDevice;Lcom/garmin/android/connectiq/IQApp;)V = RegisterForRemoteAppEvents(Com.Garmin.Android.Connectiq.IQDevice, Com.Garmin.Android.Connectiq.IQApp)
  sendImageProtocol(Lcom/garmin/android/connectiq/IQDevice;Lcom/garmin/android/connectiq/IQApp;[BLcom/garmin/android/connectiq/ConnectIQ$IQSendImageListener;)V = SendImageProtocol(Com.Garmin.Android.Connectiq.IQDevice, Com.Garmin.Android.Connectiq.IQApp, byte[], Com.Garmin.Android.Connectiq.ConnectIQ.IQSendImageListener)
  sendMessageProtocol(Lcom/garmin/android/connectiq/IQDevice;Lcom/garmin/android/connectiq/IQApp;[BLcom/garmin/android/connectiq/ConnectIQ$IQSendMessageListener;)V = SendMessageProtocol(Com.Garmin.Android.Connectiq.IQDevice, Com.Garmin.Android.Connectiq.IQApp, byte[], Com.Garmin.Android.Connectiq.ConnectIQ.IQSendMessageListener)
com/garmin/android/connectiq/ConnectIQDeviceStrategy = Com.Garmin.Android.Connectiq.ConnectIQDeviceStrategy
  getConnectedDevices()Ljava/util/List; = ConnectedDevices
  getKnownDevices()Ljava/util/List; = KnownDevices
  getDeviceStatus(Lcom/garmin/android/connectiq/IQDevice;)Lcom/garmin/android/connectiq/IQDevice$IQDeviceStatus; = GetDeviceStatus(Com.Garmin.Android.Connectiq.IQDevice)
  registerForRemoteAppEvents(Lcom/garmin/android/connectiq/IQDevice;Lcom/garmin/android/connectiq/IQApp;)V = RegisterForRemoteAppEvents(Com.Garmin.Android.Connectiq.IQDevice, Com.Garmin.Android.Connectiq.IQApp)
  sendImageProtocol(Lcom/garmin/android/connectiq/IQDevice;Lcom/garmin/android/connectiq/IQApp;[BLcom/garmin/android/connectiq/ConnectIQ$IQSendImageListener;)V = SendImageProtocol(Com.Garmin.Android.Connectiq.IQDevice, Com.Garmin.Android.Connectiq.IQApp, byte[], Com.Garmin.Android.Connectiq.ConnectIQ.IQSendImageListener)
  sendMessageProtocol(Lcom/garmin/android/connectiq/IQDevice;Lcom/garmin/android/connectiq/IQApp;[BLcom/garmin/android/connectiq/ConnectIQ$IQSendMessageListener;)V = SendMessageProtocol(Com.Garmin.Android.Connectiq.IQDevice, Com.Garmin.Android.Connectiq.IQApp, byte[], Com.Garmin.Android.Connectiq.ConnectIQ.IQSendMessageListener)
com/garmin/android/connectiq/ConnectIQStateManager = Com.Garmin.Android.Connectiq.ConnectIQStateManager
  getApplicationInfoListener()Lcom/garmin/android/connectiq/ConnectIQ$IQApplicationInfoListener; = ApplicationInfoListener
  setApplicationInfoListener(Lcom/garmin/android/connectiq/ConnectIQ$IQApplicationInfoListener;)V = ApplicationInfoListener
  getInstance()Lcom/garmin/android/connectiq/ConnectIQStateManager; = Instance
  getOpenApplicationListener()Lcom/garmin/android/connectiq/ConnectIQ$IQOpenApplicationListener; = OpenApplicationListener
  setOpenApplicationListener(Lcom/garmin/android/connectiq/ConnectIQ$IQOpenApplicationListener;)V = OpenApplicationListener
  getSendMessageListener()Lcom/garmin/android/connectiq/ConnectIQ$IQSendMessageListener; = SendMessageListener
  setSendMessageListener(Lcom/garmin/android/connectiq/ConnectIQ$IQSendMessageListener;)V = SendMessageListener
com/garmin/android/connectiq/exception/InvalidStateException = Com.Garmin.Android.Connectiq.Exception.InvalidStateException
  <init>(Ljava/lang/String;)V = .ctor(string)
com/garmin/android/connectiq/exception/ServiceUnavailableException = Com.Garmin.Android.Connectiq.Exception.ServiceUnavailableException
  <init>(Ljava/lang/String;)V = .ctor(string)
com/garmin/android/connectiq/IQApp = Com.Garmin.Android.Connectiq.IQApp
  <init>(Landroid/os/Parcel;)V = .ctor(Android.OS.Parcel)
  <init>(Ljava/lang/String;)V = .ctor(string)
  <init>(Ljava/lang/String;I)V = .ctor(string, int)
  <init>(Ljava/lang/String;Lcom/garmin/android/connectiq/IQApp$IQAppStatus;Ljava/lang/String;I)V = .ctor(string, Com.Garmin.Android.Connectiq.IQApp.IQAppStatus, string, int)
  <init>(Ljava/lang/String;Ljava/lang/String;I)V = .ctor(string, string, int)
  CREATOR = Creator
  getApplicationId()Ljava/lang/String; = ApplicationId
  getDisplayName()Ljava/lang/String; = DisplayName
  getStatus()Lcom/garmin/android/connectiq/IQApp$IQAppStatus; = Status
  describeContents()I = DescribeContents()
  version()I = Version()
  writeToParcel(Landroid/os/Parcel;I)V = WriteToParcel(Android.OS.Parcel, Android.OS.ParcelableWriteFlags)
com/garmin/android/connectiq/IQDevice = Com.Garmin.Android.Connectiq.IQDevice
  <init>(JLjava/lang/String;)V = .ctor(long, string)
  <init>(Landroid/os/Parcel;)V = .ctor(Android.OS.Parcel)
  CREATOR = Creator
  getDeviceIdentifier()J = DeviceIdentifier
  getFriendlyName()Ljava/lang/String; = FriendlyName
  getStatus()Lcom/garmin/android/connectiq/IQDevice$IQDeviceStatus; = Status
  setStatus(Lcom/garmin/android/connectiq/IQDevice$IQDeviceStatus;)V = Status
  describeContents()I = DescribeContents()
  writeToParcel(Landroid/os/Parcel;I)V = WriteToParcel(Android.OS.Parcel, Android.OS.ParcelableWriteFlags)
com/garmin/android/connectiq/IQMessage = Com.Garmin.Android.Connectiq.IQMessage
  <init>([BLjava/lang/String;Ljava/lang/String;)V = .ctor(byte[], string, string)
  <init>(Landroid/os/Parcel;)V = .ctor(Android.OS.Parcel)
  CREATOR = Creator
  messageData = MessageData
  notificationAction = NotificationAction
  notificationPackage = NotificationPackage
  describeContents()I = DescribeContents()
  writeToParcel(Landroid/os/Parcel;I)V = WriteToParcel(Android.OS.Parcel, Android.OS.ParcelableWriteFlags)
com/garmin/android/connectiq/IQMessageReceiver = Com.Garmin.Android.Connectiq.IQMessageReceiver
  <init>()V = .ctor()
  <init>(Lcom/garmin/android/connectiq/ConnectIQ$IQDeviceEventListener;Lcom/garmin/android/connectiq/ConnectIQ$IQApplicationEventListener;)V = .ctor(Com.Garmin.Android.Connectiq.ConnectIQ.IQDeviceEventListener, Com.Garmin.Android.Connectiq.ConnectIQ.IQApplicationEventListener)
  getAppListener()Lcom/garmin/android/connectiq/ConnectIQ$IQApplicationEventListener; = AppListener
  setAppListener(Lcom/garmin/android/connectiq/ConnectIQ$IQApplicationEventListener;)V = AppListener
  getListener()Lcom/garmin/android/connectiq/ConnectIQ$IQDeviceEventListener; = Listener
  setListener(Lcom/garmin/android/connectiq/ConnectIQ$IQDeviceEventListener;)V = Listener
  onReceive(Landroid/content/Context;Landroid/content/Intent;)V = OnReceive(Android.Content.Context, Android.Content.Intent)
com/garmin/monkeybrains/serialization/DataBlock = Com.Garmin.Monkeybrains.Serialization.DataBlock
  <init>()V = .ctor()
  <init>([BLcom/garmin/monkeybrains/serialization/StringBlock;)V = .ctor(byte[], Com.Garmin.Monkeybrains.Serialization.StringBlock)
  add(Lcom/garmin/monkeybrains/serialization/MonkeyType;)Z = Add(Com.Garmin.Monkeybrains.Serialization.MonkeyType)
  serialize()[B = Serialize()
com/garmin/monkeybrains/serialization/MonkeyArray = Com.Garmin.Monkeybrains.Serialization.MonkeyArray
  <init>([B)V = .ctor(byte[])
  <init>(Ljava/util/List;)V = .ctor(System.Collections.IList)
  getChildCount()I = ChildCount
  getChildren()Ljava/util/List; = Children
  getNumBytes()I = NumBytes
  getValues()Ljava/util/List; = Values
  serialize()[B = Serialize()
com/garmin/monkeybrains/serialization/MonkeyBool = Com.Garmin.Monkeybrains.Serialization.MonkeyBool
  <init>([B)V = .ctor(byte[])
  <init>(Z)V = .ctor(bool)
  getNumBytes()I = NumBytes
  serialize()[B = Serialize()
  toJava()Ljava/lang/Boolean; = ToJava()
com/garmin/monkeybrains/serialization/MonkeyContainer = Com.Garmin.Monkeybrains.Serialization.IMonkeyContainer
  getChildCount()I = ChildCount
  getChildren()Ljava/util/List; = Children
com/garmin/monkeybrains/serialization/MonkeyDouble = Com.Garmin.Monkeybrains.Serialization.MonkeyDouble
  <init>([B)V = .ctor(byte[])
  <init>(D)V = .ctor(double)
  getNumBytes()I = NumBytes
  serialize()[B = Serialize()
  toJava()Ljava/lang/Double; = ToJava()
com/garmin/monkeybrains/serialization/MonkeyFloat = Com.Garmin.Monkeybrains.Serialization.MonkeyFloat
  <init>([B)V = .ctor(byte[])
  <init>(F)V = .ctor(float)
  getNumBytes()I = NumBytes
  serialize()[B = Serialize()
  toJava()Ljava/lang/Float; = ToJava()
com/garmin/monkeybrains/serialization/MonkeyHash = Com.Garmin.Monkeybrains.Serialization.MonkeyHash
  <init>([B)V = .ctor(byte[])
  <init>(Ljava/util/Map;)V = .ctor(System.Collections.Generic.IDictionary<Java.Lang.Object, Java.Lang.Object>)
  getHashMap()Ljava/util/HashMap; = HashMap
  getChildCount()I = ChildCount
  getChildren()Ljava/util/List; = Children
  getNumBytes()I = NumBytes
  serialize()[B = Serialize()
com/garmin/monkeybrains/serialization/MonkeyChar = Com.Garmin.Monkeybrains.Serialization.MonkeyChar
  <init>([B)V = .ctor(byte[])
  <init>(Ljava/lang/Integer;)V = .ctor(Java.Lang.Integer)
  getNumBytes()I = NumBytes
  serialize()[B = Serialize()
  toJava()Ljava/lang/Integer; = ToJava()
com/garmin/monkeybrains/serialization/MonkeyInt = Com.Garmin.Monkeybrains.Serialization.MonkeyInt
  <init>([B)V = .ctor(byte[])
  <init>(I)V = .ctor(int)
  getNumBytes()I = NumBytes
  serialize()[B = Serialize()
  toJava()Ljava/lang/Integer; = ToJava()
com/garmin/monkeybrains/serialization/MonkeyLong = Com.Garmin.Monkeybrains.Serialization.MonkeyLong
  <init>([B)V = .ctor(byte[])
  <init>(J)V = .ctor(long)
  getNumBytes()I = NumBytes
  serialize()[B = Serialize()
  toJava()Ljava/lang/Long; = ToJava()
com/garmin/monkeybrains/serialization/MonkeyNull = Com.Garmin.Monkeybrains.Serialization.MonkeyNull
  <init>()V = .ctor()
  <init>([B)V = .ctor(byte[])
  <init>(Ljava/lang/Object;)V = .ctor(Java.Lang.Object)
  getNumBytes()I = NumBytes
  serialize()[B = Serialize()
  toJava()Ljava/lang/Object; = ToJava()
com/garmin/monkeybrains/serialization/MonkeyString = Com.Garmin.Monkeybrains.Serialization.MonkeyString
  <init>([B)V = .ctor(byte[])
  <init>(Ljava/lang/String;)V = .ctor(string)
  getNumBytes()I = NumBytes
  getOffset()I = Offset
  setOffset(I)V = Offset
  getValue()Ljava/lang/String; = Value
  setValue(Ljava/lang/String;)V = Value
  serialize()[B = Serialize()
  serializeString()[B = SerializeString()
com/garmin/monkeybrains/serialization/MonkeyType = Com.Garmin.Monkeybrains.Serialization.MonkeyType
  <init>(B)V = .ctor(sbyte)
  ARRAY = Array
  BOOLEAN = Boolean
  DOUBLE = Double
  FLOAT = Float
  HASH = Hash
  CHAR = Char
  INT = Int
  LONG = Long
  mType = MType
  NULL = Null
  STRING = String
  getNumBytes()I = NumBytes
  deserialize([B)Lcom/garmin/monkeybrains/serialization/MonkeyType; = Deserialize(byte[])
  fromJava(Ljava/lang/Object;)Lcom/garmin/monkeybrains/serialization/MonkeyType; = FromJava(Java.Lang.Object)
  serialize()[B = Serialize()
  toJava()Ljava/lang/Object; = ToJava()
com/garmin/monkeybrains/serialization/SerializedObject = Com.Garmin.Monkeybrains.Serialization.SerializedObject
  <init>()V = .ctor()
  <init>([B)V = .ctor(byte[])
  getValues()Ljava/util/List; = Values
  addObject(Lcom/garmin/monkeybrains/serialization/MonkeyType;)V = AddObject(Com.Garmin.Monkeybrains.Serialization.MonkeyType)
  serialize()[B = Serialize()
com/garmin/monkeybrains/serialization/Serializer = Com.Garmin.Monkeybrains.Serialization.Serializer
  <init>()V = .ctor()
  <init>(Ljava/lang/Object;)V = .ctor(Java.Lang.Object)
  addObject(Ljava/lang/Object;)V = AddObject(Java.Lang.Object)
  deserialize([B)Ljava/util/List; = Deserialize(byte[])
  serialize()[B = Serialize()
  serialize(Ljava/lang/Object;)[B = Serialize(Java.Lang.Object)
com/garmin/monkeybrains/serialization/StringBlock = Com.Garmin.Monkeybrains.Serialization.StringBlock
  <init>()V = .ctor()
  <init>([B)V = .ctor(byte[])
  getDeserializedStrings()Ljava/util/HashMap; = DeserializedStrings
  addString(Lcom/garmin/monkeybrains/serialization/MonkeyString;)I = AddString(Com.Garmin.Monkeybrains.Serialization.MonkeyString)
  serialize()[B = Serialize()
